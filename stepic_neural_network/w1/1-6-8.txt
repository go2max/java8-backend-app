Основные методы ndarray
Базовые статистики

    a.min(axis=None), a.max(axis=None), a.mean(axis=None), a.std(axis=None) — минимум, максимум, среднее арифметическое и стандартное отклонение вдоль указанной оси. По умолчанию ось не указана и статистика считается по всему массиву. a.argmin(axis=None), a.argmax(axis=None) — индексы минимального и максимального элемента. Пример:

    >>> print(v)
    [[1 2 3 4]
     [1 2 3 4]
     [1 2 3 4]]
    >>> print(v.mean(axis=0))  # вдоль столбцов
    [ 1.  2.  3.  4.]
    >>> print(v.mean(axis=1))  # вдоль строк
    [ 2.5  2.5  2.5]
    >>> print(v.mean(axis=None))  # вдоль всего массива
    2.5

    Чтобы лучше понять, почему говорят «усреднение вдоль оси» — можно нарисовать эту матрицу на бумажке и прямыми линиями соединить те элементы, которые сливаются в один при усреднении. Чтобы было совсем понятно — можно ещё добавить координатные оси, чтобы каждый элемент wij

оказался над точкой (i,j)
.
a.sum(axis=None), a.prod(axis=None) — сумма и произведение всех элементов вдоль указанной оси. a.cumsum(axis=None), a.cumprod(axis=None) — частичные суммы и произведения (для (a1,⋯,an)
вектор частичных сумм — это (a1,a1+a2,⋯,a1+⋯+an)

    ).

Линейная алгебра
Пакет numpy.linalg содержит большую часть стандартных операций и разложений матриц. Некоторые самые популярные функции вынесены в корень пакета NumPy.

    a.dot(b) — матричное произведение двух массивов (размерности должны быть согласованы),
    linalg.matrix_power(M, n) — возведение матрицы M в степень n,
    a.T — транспонирование
    linalg.norm(a, ord=None) — норма матрицы a, по умолчанию норма Фробениуса для матриц и L2-норма для векторов; подробное описание возможных норм — в справке,
    linalg.inv(a) — матрица, обратная к a (если a необратима, выбрасывается LinAlgError; псевдообратная считается через linalg.pinv(a))


>>> a = w.dot([1,2,3])
>>> print(a)
[[4740 2671]
 [2552 2912]]
>>> ainv = np.linalg.inv(a)
>>> print(a.dot(ainv))
[[  1.00000000e+00   0.00000000e+00]
 [ -2.22044605e-16   1.00000000e+00]]


Подробные описания с указанием полного списка аргументов, а также описания всех остальных функций находятся на сайте проекта NumPy.